# Config file for FacialLandmarksForCubism

# The path of this config file should be passed to the constructor
# of the FacialLandmarkDetector.

# Comments are lines that start with a '#' and are ignored by the parser.
# Note that a line will be considered as a comment ONLY IF the '#' is the
# very first character of the line, i.e. without any preceeding whitespace.


## Section 0: OpenSeeFace connection parameters
osfIpAddress 127.0.0.1
osfPort 11573

## Section 1: Cubism params calculation control
#
# These values control how the facial landmarks are translated into
# parameters that control the Cubism model, and will vary from person
# to person. The following values seem to work OK for my face, but
# your milage may vary.

# Section 1.0: Live2D automatic functionality
# Set 1 to enable, 0 to disable.
# If these are set, the automatic functionality in Live2D will be enabled.
# Note: If you set auto blink, eye control will be disabled.
autoBlink 0
autoBreath 0
randomMotion 0

# Section 1.1: Face Y direction angle (head pointing up/down)
# The Y angle is calculated mainly based on the angle formed
# by the corners and the tip of the nose (hereafter referred
# to as the "nose angle").

# This applies an offset (in degrees).
# If you have a webcam at the top of your monitor, then it is likely
# that when you look at the centre of your monitor, the captured image
# will have you looking downwards. This offset shifts the angle upwards,
# so that the resulting avatar will still be looking straight ahead.
faceYAngleCorrection 10

# This is the baseline value for the nose angle (in radians) when looking
# straight ahead...
faceYAngleZeroValue 1.8

# ... and this is when you are looking up...
faceYAngleUpThreshold 1.3

# ... and when looking down.
faceYAngleDownThreshold 2.3

# This is an additional multiplication factor applied per degree of rotation
# in the X direction (left/right) - since the nose angle reduces when
# turning your head left/right.
faceYAngleXRotCorrection 0.15

# This is the multiplication factor to reduce by when smiling or laughing -
# the nose angle increases in such cases.
faceYAngleSmileCorrection 0.075


# Section 1.2: Eye control
# This is mainly calculated based on the eye aspect ratio (eye height
# divided by eye width).

# Maximum eye aspect ratio when the eye is closed
eyeClosedThreshold 0.18

# Minimum eye aspect ratio when the eye is open
eyeOpenThreshold 0.21

# Max eye aspect ratio to switch to a closed "smiley eye"
eyeSmileEyeOpenThreshold 0.6

# Min "mouth form" value to switch to a closed "smiley eye"
# "Mouth form" is 1 when fully smiling / laughing, and 0 when normal
eyeSmileMouthFormThreshold 0.75

# Min "mouth open" value to switch to a closed "smiley eye"
# "Mouth open" is 1 when fully open, and 0 when closed
eyeSmileMouthOpenThreshold 0.5

# Enable winks (experimental)
# Winks may or may not work well on your face, depending on the dataset.
# If all you get is ugly asynchronous blinks, consider setting this to
# zero instead.
# Also, this seems to not work very well when wearing glasses.
winkEnable 1


# Section 1.3: Mouth control
# Two parameters are passed to Cubism to control the mouth:
#  - mouth form: Controls smiles / laughs
#  - mouth openness: How widely open the mouth is
# Mouth form is calculated by the ratio between the mouth width
# and the eye separation (distance between the two eyes).
# Mouth openness is calculated by the ratio between the lip separation
# (distance between upper and lower lips) and the mouth width.

# Max mouth-width-to-eye-separation ratio to have a normal resting mouth
mouthNormalThreshold 0.75

# Min mouth-width-to-eye-separation ratio to have a fully smiling
# or laughing mouth
mouthSmileThreshold 1.0

# Max lip-separation-to-mouth-width ratio to have a closed mouth
mouthClosedThreshold 0.1

# Min lip-separation-to-mouth-width ratio to have a fully opened mouth
mouthOpenThreshold 0.4

# Additional multiplication factor applied to the mouth openness parameter
# when the mouth is fully smiling / laughing, since doing so increases
# the mouth width
mouthOpenLaughCorrection 0.2


## Section 2: Filtering parameters
# The facial landmark coordinates can be quite noisy, so I've applied
# a simple moving average filter to reduce noise. More taps would mean
# more samples to average over, hence smoother movements with less noise,
# but it will also cause more lag between your movement and the movement
# of the avatar, and quick movements (e.g. blinks) may be completely missed.

faceXAngleNumTaps 7
faceYAngleNumTaps 7
faceZAngleNumTaps 7
mouthFormNumTaps 3
mouthOpenNumTaps 3
leftEyeOpenNumTaps 3
rightEyeOpenNumTaps 3

